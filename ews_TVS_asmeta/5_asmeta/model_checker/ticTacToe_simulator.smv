--file C:\Users\kevin\Documents\GitHub\tvs_code\ews_TVS_asmeta\5_asmeta\model_checker\ticTacToe_simulator.smv
-- options: flatten? true
MODULE main
	VAR
		board_1_1: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		board_1_2: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		board_1_3: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		board_2_1: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		board_2_2: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		board_2_3: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		board_3_1: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		board_3_2: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		board_3_3: {CROSS, NOUGHT, SIGN_UNDEF}; --controlled
		status: {STATUS_UNDEF, TURN_PC, TURN_USER}; --controlled
		userChoiceC: {-2147483647, 1, 2, 3}; --monitored
		userChoiceR: {-2147483647, 1, 2, 3}; --monitored
		--declaration of choose variables
		var_$c3_0: 1..3;
		var_$r2_0: 1..3;
	DEFINE
		endOfGame := (((((board_2_2 = CROSS) & (board_1_3 = CROSS) & (board_3_1 = CROSS)) | (((((board_1_2 = CROSS) & (board_1_1 = CROSS) & (board_1_3 = CROSS)) | ((board_2_2 = CROSS) & (board_2_1 = CROSS) & (board_2_3 = CROSS)) | ((board_3_2 = CROSS) & (board_3_1 = CROSS) & (board_3_3 = CROSS))) | (((board_1_2 = CROSS) & (board_2_2 = CROSS) & (board_3_2 = CROSS)) | ((board_1_1 = CROSS) & (board_2_1 = CROSS) & (board_3_1 = CROSS)) | ((board_1_3 = CROSS) & (board_2_3 = CROSS) & (board_3_3 = CROSS)))) | ((board_2_2 = CROSS) & (board_1_1 = CROSS) & (board_3_3 = CROSS)))) | ((((board_2_2 = NOUGHT) & (board_3_3 = NOUGHT) & (board_1_1 = NOUGHT)) | ((((board_3_1 = NOUGHT) & (board_3_3 = NOUGHT) & (board_3_2 = NOUGHT)) | ((board_2_1 = NOUGHT) & (board_2_2 = NOUGHT) & (board_2_3 = NOUGHT)) | ((board_1_2 = NOUGHT) & (board_1_3 = NOUGHT) & (board_1_1 = NOUGHT))) | (((board_1_3 = NOUGHT) & (board_3_3 = NOUGHT) & (board_2_3 = NOUGHT)) | ((board_1_2 = NOUGHT) & (board_2_2 = NOUGHT) & (board_3_2 = NOUGHT)) | ((board_2_1 = NOUGHT) & (board_3_1 = NOUGHT) & (board_1_1 = NOUGHT))))) | ((board_1_3 = NOUGHT) & (board_2_2 = NOUGHT) & (board_3_1 = NOUGHT)))) | ((board_1_1 != SIGN_UNDEF) & (board_1_2 != SIGN_UNDEF) & (board_2_1 != SIGN_UNDEF) & (board_3_3 != SIGN_UNDEF) & (board_2_3 != SIGN_UNDEF) & (board_3_2 != SIGN_UNDEF) & (board_1_3 != SIGN_UNDEF) & (board_2_2 != SIGN_UNDEF) & (board_3_1 != SIGN_UNDEF)));
	CONSTANTS SIGN_UNDEF, CROSS, NOUGHT, STATUS_UNDEF, TURN_PC, TURN_USER;
	ASSIGN
		init(board_1_1) := SIGN_UNDEF;
		init(board_1_2) := SIGN_UNDEF;
		init(board_1_3) := SIGN_UNDEF;
		init(board_2_1) := SIGN_UNDEF;
		init(board_2_2) := SIGN_UNDEF;
		init(board_2_3) := SIGN_UNDEF;
		init(board_3_1) := SIGN_UNDEF;
		init(board_3_2) := SIGN_UNDEF;
		init(board_3_3) := SIGN_UNDEF;
		init(status) := TURN_USER;
		next(board_1_1) :=
			case
				((board_1_1 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 1) & (userChoiceR = 1)))): CROSS;
				((!(endOfGame) & !(status = TURN_USER)) & (board_1_1 = SIGN_UNDEF) & (var_$r2_0 = 1) & (var_$c3_0 = 1)): NOUGHT;
				TRUE: board_1_1;
			esac;
		next(board_1_2) :=
			case
				((!(endOfGame) & !(status = TURN_USER)) & (var_$r2_0 = 1) & (var_$c3_0 = 2) & (board_1_2 = SIGN_UNDEF)): NOUGHT;
				((board_1_2 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 2) & (userChoiceR = 1)))): CROSS;
				TRUE: board_1_2;
			esac;
		next(board_1_3) :=
			case
				((!(endOfGame) & !(status = TURN_USER)) & (var_$r2_0 = 1) & (board_1_3 = SIGN_UNDEF) & (var_$c3_0 = 3)): NOUGHT;
				((board_1_3 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 3) & (userChoiceR = 1)))): CROSS;
				TRUE: board_1_3;
			esac;
		next(board_2_1) :=
			case
				((board_2_1 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 1) & (userChoiceR = 2)))): CROSS;
				((!(endOfGame) & !(status = TURN_USER)) & (var_$r2_0 = 2) & (var_$c3_0 = 1) & (board_2_1 = SIGN_UNDEF)): NOUGHT;
				TRUE: board_2_1;
			esac;
		next(board_2_2) :=
			case
				((board_2_2 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 2) & (userChoiceR = 2)))): CROSS;
				((!(endOfGame) & !(status = TURN_USER)) & (board_2_2 = SIGN_UNDEF) & (var_$c3_0 = 2) & (var_$r2_0 = 2)): NOUGHT;
				TRUE: board_2_2;
			esac;
		next(board_2_3) :=
			case
				((((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 3) & (userChoiceR = 2))) & (board_2_3 = SIGN_UNDEF)): CROSS;
				((!(endOfGame) & !(status = TURN_USER)) & (var_$c3_0 = 3) & (var_$r2_0 = 2) & (board_2_3 = SIGN_UNDEF)): NOUGHT;
				TRUE: board_2_3;
			esac;
		next(board_3_1) :=
			case
				((((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 1) & (userChoiceR = 3))) & (board_3_1 = SIGN_UNDEF)): CROSS;
				((!(endOfGame) & !(status = TURN_USER)) & (board_3_1 = SIGN_UNDEF) & (var_$r2_0 = 3) & (var_$c3_0 = 1)): NOUGHT;
				TRUE: board_3_1;
			esac;
		next(board_3_2) :=
			case
				((!(endOfGame) & !(status = TURN_USER)) & (var_$c3_0 = 2) & (var_$r2_0 = 3) & (board_3_2 = SIGN_UNDEF)): NOUGHT;
				((board_3_2 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 2) & (userChoiceR = 3)))): CROSS;
				TRUE: board_3_2;
			esac;
		next(board_3_3) :=
			case
				((!(endOfGame) & !(status = TURN_USER)) & (var_$c3_0 = 3) & (var_$r2_0 = 3) & (board_3_3 = SIGN_UNDEF)): NOUGHT;
				((board_3_3 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 3) & (userChoiceR = 3)))): CROSS;
				TRUE: board_3_3;
			esac;
		next(status) :=
			case
				((((((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 1) & (userChoiceR = 3))) & (board_3_1 = SIGN_UNDEF)) | ((((board_1_1 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 1) & (userChoiceR = 1)))) | (((((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 3) & (userChoiceR = 2))) & (board_2_3 = SIGN_UNDEF)) | (((board_2_2 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 2) & (userChoiceR = 2)))) | ((((board_3_3 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 3) & (userChoiceR = 3)))) | ((board_2_1 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 1) & (userChoiceR = 2))))) | ((board_3_2 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 2) & (userChoiceR = 3)))))))) | ((board_1_2 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 2) & (userChoiceR = 1)))))) | ((board_1_3 = SIGN_UNDEF) & (((status = TURN_USER) & !(endOfGame)) & ((userChoiceC = 3) & (userChoiceR = 1))))): TURN_PC;
				(((!(endOfGame) & !(status = TURN_USER)) & (var_$c3_0 = 3) & (var_$r2_0 = 3) & (board_3_3 = SIGN_UNDEF)) | (((!(endOfGame) & !(status = TURN_USER)) & (var_$c3_0 = 2) & (var_$r2_0 = 3) & (board_3_2 = SIGN_UNDEF)) | ((((!(endOfGame) & !(status = TURN_USER)) & (var_$c3_0 = 3) & (var_$r2_0 = 2) & (board_2_3 = SIGN_UNDEF)) | ((((((!(endOfGame) & !(status = TURN_USER)) & (var_$r2_0 = 1) & (var_$c3_0 = 2) & (board_1_2 = SIGN_UNDEF)) | ((!(endOfGame) & !(status = TURN_USER)) & (board_1_1 = SIGN_UNDEF) & (var_$r2_0 = 1) & (var_$c3_0 = 1))) | ((!(endOfGame) & !(status = TURN_USER)) & (var_$r2_0 = 1) & (board_1_3 = SIGN_UNDEF) & (var_$c3_0 = 3))) | ((!(endOfGame) & !(status = TURN_USER)) & (var_$r2_0 = 2) & (var_$c3_0 = 1) & (board_2_1 = SIGN_UNDEF))) | ((!(endOfGame) & !(status = TURN_USER)) & (board_2_2 = SIGN_UNDEF) & (var_$c3_0 = 2) & (var_$r2_0 = 2)))) | ((!(endOfGame) & !(status = TURN_USER)) & (board_3_1 = SIGN_UNDEF) & (var_$r2_0 = 3) & (var_$c3_0 = 1))))): TURN_USER;
				TRUE: status;
			esac;
	INVAR	((!(board_2_1 = SIGN_UNDEF) & !(board_3_3 = SIGN_UNDEF) & !(board_1_2 = SIGN_UNDEF) & !(board_3_2 = SIGN_UNDEF) & !(board_1_1 = SIGN_UNDEF) & !(board_2_3 = SIGN_UNDEF) & !(board_3_1 = SIGN_UNDEF) & !(board_2_2 = SIGN_UNDEF) & !(board_1_3 = SIGN_UNDEF)) | ((var_$r2_0 = 2) & (var_$c3_0 = 1) & (board_2_1 = SIGN_UNDEF)) | ((var_$c3_0 = 3) & (var_$r2_0 = 2) & (board_2_3 = SIGN_UNDEF)) | ((var_$r2_0 = 1) & (var_$c3_0 = 2) & (board_1_2 = SIGN_UNDEF)) | ((var_$c3_0 = 3) & (var_$r2_0 = 3) & (board_3_3 = SIGN_UNDEF)) | ((board_1_1 = SIGN_UNDEF) & (var_$r2_0 = 1) & (var_$c3_0 = 1)) | ((var_$c3_0 = 2) & (var_$r2_0 = 3) & (board_3_2 = SIGN_UNDEF)) | ((var_$r2_0 = 1) & (board_1_3 = SIGN_UNDEF) & (var_$c3_0 = 3)) | ((board_3_1 = SIGN_UNDEF) & (var_$r2_0 = 3) & (var_$c3_0 = 1)) | ((board_2_2 = SIGN_UNDEF) & (var_$c3_0 = 2) & (var_$r2_0 = 2)));
--CTL properties
CTLSPEC NAME ctl0 := !(EF((((board_2_2 = CROSS) & (board_1_3 = CROSS) & (board_3_1 = CROSS)) | (((((board_1_2 = CROSS) & (board_1_1 = CROSS) & (board_1_3 = CROSS)) | ((board_2_2 = CROSS) & (board_2_1 = CROSS) & (board_2_3 = CROSS)) | ((board_3_2 = CROSS) & (board_3_1 = CROSS) & (board_3_3 = CROSS))) | (((board_1_2 = CROSS) & (board_2_2 = CROSS) & (board_3_2 = CROSS)) | ((board_1_1 = CROSS) & (board_2_1 = CROSS) & (board_3_1 = CROSS)) | ((board_1_3 = CROSS) & (board_2_3 = CROSS) & (board_3_3 = CROSS)))) | ((board_2_2 = CROSS) & (board_1_1 = CROSS) & (board_3_3 = CROSS))))));
