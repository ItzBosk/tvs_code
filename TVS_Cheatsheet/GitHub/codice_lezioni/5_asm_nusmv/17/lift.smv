
MODULE main
VAR
	cabin : 0 .. 3;
	dir : {up, down};
	request : array 0 .. 3 of boolean;
ASSIGN
-- stato iniziale
	init (cabin) := 0;
	init (dir) := up;
	init (request[0]) := FALSE;
	init (request[1]) := FALSE;
	init (request[2]) := FALSE;
	init (request[3]) := FALSE;
	-- next state
	next (cabin) :=
		case
			dir = up & cabin < 3 : cabin + 1;
			dir = down & cabin > 0 : cabin - 1;
			TRUE : cabin;
		esac; 
		
	next(dir):= 
	case
	    --cabin = 2 & dir = up : down;
	    dir = up & next(cabin) = 3: down;
	    dir = down & next(cabin) = 0: up;
	    TRUE: dir; -- altrimenti rimani nella stessa direzione
	esac;    
	next(request[0]):=
	   case
	   next(cabin) = 0 : FALSE; -- spengo richiest
	   request[0] : TRUE; -- rimane acceso (! next(cabin) = 0)
	   TRUE: {TRUE,FALSE}; -- ! request[0] & ! next(cabin) = 0
	   esac;
	next(request[1]):=
	   case
	   next(cabin) = 1 : FALSE; -- spengo richiest
	   request[1] : TRUE; -- rimane acceso (! next(cabin) = 0)
	   TRUE: {TRUE,FALSE}; -- ! request[0] & ! next(cabin) = 0
	   esac;
	next(request[2]):=
	   case
	   next(cabin) = 2 : FALSE; -- spengo richiest
	   request[2] : TRUE; -- rimane acceso (! next(cabin) = 0)
	   TRUE: {TRUE,FALSE}; -- ! request[0] & ! next(cabin) = 0
	   esac;
	next(request[3]):=
	   case
	   next(cabin) = 3 : FALSE; -- spengo richiest
	   request[3] : TRUE; -- rimane acceso (! next(cabin) = 0)
	   TRUE: {TRUE,FALSE}; -- ! request[0] & ! next(cabin) = 0
	   esac;
	   
LTLSPEC F(cabin = 0) -- prima o poi raggiunge il piano

-- non sta sempre al piano 1
LTLSPEC ! G(cabin = 1)   -- F (cabin != 1) 

-- NO: non va mai al piano 1 
LTLSPEC G(cabin != 1)

LTLSPEC G(cabin = 1 -> X(cabin = 2 | cabin = 0))

--LTLSPEC G(cabin = 1 -> X(cabin = 2))

-- se è al piano 3, prima o poi va al piano 2
LTLSPEC G(cabin = 3 -> F(cabin = 2))
LTLSPEC G(cabin = 3 -> X(cabin = 2))
-- se è al piano3 sta al piano 3 fino a quando non passa la piano 2
LTLSPEC G(cabin = 3 -> (cabin = 3 U cabin = 2))

-- no deadlock
CTLSPEC AG(EX TRUE)

-- la richiesta a piano 1 viene spenta prima o poi
LTLSPEC(F ! request[0])

-- se ho una richiesta al piano 0, esiste un percorso che la soddisfa
CTLSPEC AG( request[0] -> EF(!request[0]))

--
CTLSPEC AG( request[3] -> ! EF(!request[3]))

-- può sempre acccadere che cabin vada al piano 0
CTLSPEC AG EF(cabin = 0)




