
MODULE main
VAR
	cabin : 0 .. 3;
	request : array 0 .. 3 of boolean;
	dir : {up, down};
ASSIGN
	init (cabin) := 0;
	init (dir) := up;
	init (request[0]) := FALSE;
	init (request[1]) := FALSE;
	init (request[2]) := FALSE;
	init (request[3]) := FALSE;
	next (cabin) :=
		case
			dir = up & cabin < 3 : {cabin + 1, cabin};
			dir = down & cabin > 0 : {cabin - 1, cabin};
			TRUE : cabin;
		esac;
	next (dir) :=
		case
			dir = up & next (cabin) = 3 : down;
			dir = down & next (cabin) = 0 : up;
			TRUE : dir;
		esac;
	next (request[0]) :=
		case
			next (cabin) = 0 : FALSE;
			request[0] : TRUE;
			TRUE : {TRUE, FALSE};
		esac;
	next (request[3]) :=
		case
			next (cabin) = 3 : FALSE;
			request[3] : TRUE;
			TRUE : {TRUE, FALSE};
		esac;
CTLSPEC EF (cabin = 3)
LTLSPEC F (cabin = 3)
CTLSPEC AG (dir = up -> AF (cabin = 3))
   
