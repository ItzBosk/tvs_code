MODULE main
VAR
	giocataA : {sasso, carta, forbici};
	giocataB : {sasso, carta, forbici};
	risultato : {vinceA, vinceB, patta};
ASSIGN
init(risultato) := patta;
next(risultato) := 
case
-- sasso vs forbici
giocataA = sasso & giocataB = forbici : vinceA;
giocataB = sasso & giocataA = forbici : vinceB;
-- forbici vs carta
giocataA = forbici & giocataB = carta : vinceA;
giocataB = forbici & giocataA = carta : vinceB;
-- carta vs sasso
giocataA = carta & giocataB = sasso : vinceA;
giocataB = carta & giocataA = sasso : vinceB;
-- altrimenti è patta
TRUE: patta;
esac;
-- proprietà
-- il primo giocatore può vincere
CTLSPEC EF risultato = vinceA;
CTLSPEC EF risultato = vinceB;
-- la partità può essere patta:
-- esiste uno stato in futuro in cui è patta
CTLSPEC EF risultato = patta;
-- salto lo stato iniziale
CTLSPEC AX EF risultato = patta;
-- può essere patta sempre
CTLSPEC AG EF risultato = patta;
--
-- E' sempre possibile che il primo giocatore possa vincere nel futuro;  
--
CTLSPEC AG EF risultato = vinceA;

-- il primo non può mai vincere
CTLSPEC ! EF (risultato = vinceA);
CTLSPEC AG !(risultato = vinceA);
-- il primo giocatore dopo che ha vinto, vincerà sempre
CTLSPEC AG (risultato = vinceA -> AG(risultato = vinceA));

