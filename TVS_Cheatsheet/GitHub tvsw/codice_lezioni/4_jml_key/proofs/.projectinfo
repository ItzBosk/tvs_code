<?xml version="1.0" encoding="windows-1252"?>
<project name="jml_key_lezione">
   <package name="base" path="/jml_key_lezione/src/base">
      <type name="Assignments" path="/jml_key_lezione/src/base/Assignments.java">
         <method displayName="Assignments()" name="Assignments" declaringType="base.Assignments" declaringFilePath="/jml_key_lezione/src/base/Assignments.java" parameterTypes="">
         </method>
         <method displayName="assign(int)" name="assign" declaringType="base.Assignments" declaringFilePath="/jml_key_lezione/src/base/Assignments.java" parameterTypes="int">
            <contract name="base.Assignments[base.Assignments::assign(int)].JML normal_behavior operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/base/Assignments.java/base_Assignments[base_Assignments__assign(int)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/base/Assignments.java/base_Assignments[base_Assignments__assign(int)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="foo(int)" name="foo" declaringType="base.Assignments" declaringFilePath="/jml_key_lezione/src/base/Assignments.java" parameterTypes="int">
            <contract name="base.Assignments[base.Assignments::foo(int)].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/base/Assignments.java/base_Assignments[base_Assignments__foo(int)]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/base/Assignments.java/base_Assignments[base_Assignments__foo(int)]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="foo2(int)" name="foo2" declaringType="base.Assignments" declaringFilePath="/jml_key_lezione/src/base/Assignments.java" parameterTypes="int">
            <contract name="base.Assignments[base.Assignments::foo2(int)].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/base/Assignments.java/base_Assignments[base_Assignments__foo2(int)]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/base/Assignments.java/base_Assignments[base_Assignments__foo2(int)]_JML_operation_contract_0.proofmeta"/>
         </method>
      </type>
      <type name="Conditional" path="/jml_key_lezione/src/base/Conditional.java">
         <method displayName="Conditional()" name="Conditional" declaringType="base.Conditional" declaringFilePath="/jml_key_lezione/src/base/Conditional.java" parameterTypes="">
         </method>
         <method displayName="max(int, int)" name="max" declaringType="base.Conditional" declaringFilePath="/jml_key_lezione/src/base/Conditional.java" parameterTypes="int;int">
            <contract name="base.Conditional[base.Conditional::max(int,int)].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/base/Conditional.java/base_Conditional[base_Conditional__max(int,int)]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/base/Conditional.java/base_Conditional[base_Conditional__max(int,int)]_JML_operation_contract_0.proofmeta"/>
         </method>
      </type>
      <type name="UsoAssert" path="/jml_key_lezione/src/base/UsoAssert.java">
         <method displayName="UsoAssert()" name="UsoAssert" declaringType="base.UsoAssert" declaringFilePath="/jml_key_lezione/src/base/UsoAssert.java" parameterTypes="">
         </method>
         <method displayName="sump1(int)" name="sump1" declaringType="base.UsoAssert" declaringFilePath="/jml_key_lezione/src/base/UsoAssert.java" parameterTypes="int">
            <contract name="base.UsoAssert[base.UsoAssert::sump1(int)].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/base/UsoAssert.java/base_UsoAssert[base_UsoAssert__sump1(int)]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/base/UsoAssert.java/base_UsoAssert[base_UsoAssert__sump1(int)]_JML_operation_contract_0.proofmeta"/>
         </method>
      </type>
   </package>
   <package name="cicli" path="/jml_key_lezione/src/cicli">
      <type name="EsempiCicli" path="/jml_key_lezione/src/cicli/EsempiCicli.java">
         <method displayName="EsempiCicli()" name="EsempiCicli" declaringType="cicli.EsempiCicli" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicli.java" parameterTypes="">
         </method>
         <method displayName="countdown(int)" name="countdown" declaringType="cicli.EsempiCicli" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicli.java" parameterTypes="int">
            <contract name="cicli.EsempiCicli[cicli.EsempiCicli::countdown(int)].JML normal_behavior operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicli.java/cicli_EsempiCicli[cicli_EsempiCicli__countdown(int)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicli.java/cicli_EsempiCicli[cicli_EsempiCicli__countdown(int)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="countdownN(int)" name="countdownN" declaringType="cicli.EsempiCicli" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicli.java" parameterTypes="int">
            <contract name="cicli.EsempiCicli[cicli.EsempiCicli::countdownN(int)].JML normal_behavior operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicli.java/cicli_EsempiCicli[cicli_EsempiCicli__countdownN(int)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicli.java/cicli_EsempiCicli[cicli_EsempiCicli__countdownN(int)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="setto1(int[])" name="setto1" declaringType="cicli.EsempiCicli" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicli.java" parameterTypes="[I">
            <contract name="cicli.EsempiCicli[cicli.EsempiCicli::setto1([I)].JML normal_behavior operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicli.java/cicli_EsempiCicli[cicli_EsempiCicli__setto1([I)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicli.java/cicli_EsempiCicli[cicli_EsempiCicli__setto1([I)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="set2to1(int[])" name="set2to1" declaringType="cicli.EsempiCicli" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicli.java" parameterTypes="[I">
            <contract name="cicli.EsempiCicli[cicli.EsempiCicli::set2to1([I)].JML normal_behavior operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicli.java/cicli_EsempiCicli[cicli_EsempiCicli__set2to1([I)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicli.java/cicli_EsempiCicli[cicli_EsempiCicli__set2to1([I)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
      </type>
      <type name="EsempiCicliWInv" path="/jml_key_lezione/src/cicli/EsempiCicliWInv.java">
         <method displayName="EsempiCicliWInv()" name="EsempiCicliWInv" declaringType="cicli.EsempiCicliWInv" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicliWInv.java" parameterTypes="">
         </method>
         <method displayName="countdownEI(int)" name="countdownEI" declaringType="cicli.EsempiCicliWInv" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicliWInv.java" parameterTypes="int">
            <contract name="cicli.EsempiCicliWInv[cicli.EsempiCicliWInv::countdownEI(int)].JML normal_behavior operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__countdownEI(int)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__countdownEI(int)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="countdown(int)" name="countdown" declaringType="cicli.EsempiCicliWInv" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicliWInv.java" parameterTypes="int">
            <contract name="cicli.EsempiCicliWInv[cicli.EsempiCicliWInv::countdown(int)].JML normal_behavior operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__countdown(int)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__countdown(int)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="setto1(int[])" name="setto1" declaringType="cicli.EsempiCicliWInv" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicliWInv.java" parameterTypes="[I">
            <contract name="cicli.EsempiCicliWInv[cicli.EsempiCicliWInv::setto1([I)].JML normal_behavior operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__setto1([I)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__setto1([I)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="setto1S(int[])" name="setto1S" declaringType="cicli.EsempiCicliWInv" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicliWInv.java" parameterTypes="[I">
            <contract name="cicli.EsempiCicliWInv[cicli.EsempiCicliWInv::setto1S([I)].JML operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__setto1S([I)]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__setto1S([I)]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="getMax(int[])" name="getMax" declaringType="cicli.EsempiCicliWInv" declaringFilePath="/jml_key_lezione/src/cicli/EsempiCicliWInv.java" parameterTypes="[I">
            <contract name="cicli.EsempiCicliWInv[cicli.EsempiCicliWInv::getMax([I)].JML normal_behavior operation contract.0" modality="BOX" proofFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__getMax([I)]_JML_normal_behavior_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/cicli/EsempiCicliWInv.java/cicli_EsempiCicliWInv[cicli_EsempiCicliWInv__getMax([I)]_JML_normal_behavior_operation_contract_0.proofmeta"/>
         </method>
      </type>
   </package>
   <package name="oggetti" path="/jml_key_lezione/src/oggetti">
      <type name="Counter" path="/jml_key_lezione/src/oggetti/Counter.java">
         <method displayName="Counter()" name="Counter" declaringType="oggetti.Counter" declaringFilePath="/jml_key_lezione/src/oggetti/Counter.java" parameterTypes="">
            <contract name="oggetti.Counter[oggetti.Counter::Counter()].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/oggetti/Counter.java/oggetti_Counter[oggetti_Counter__Counter()]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/oggetti/Counter.java/oggetti_Counter[oggetti_Counter__Counter()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="incr()" name="incr" declaringType="oggetti.Counter" declaringFilePath="/jml_key_lezione/src/oggetti/Counter.java" parameterTypes="">
            <contract name="oggetti.Counter[oggetti.Counter::incr()].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/oggetti/Counter.java/oggetti_Counter[oggetti_Counter__incr()]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/oggetti/Counter.java/oggetti_Counter[oggetti_Counter__incr()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="decr()" name="decr" declaringType="oggetti.Counter" declaringFilePath="/jml_key_lezione/src/oggetti/Counter.java" parameterTypes="">
            <contract name="oggetti.Counter[oggetti.Counter::decr()].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/oggetti/Counter.java/oggetti_Counter[oggetti_Counter__decr()]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/oggetti/Counter.java/oggetti_Counter[oggetti_Counter__decr()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="getCounter()" name="getCounter" declaringType="oggetti.Counter" declaringFilePath="/jml_key_lezione/src/oggetti/Counter.java" parameterTypes="">
         </method>
      </type>
      <type name="PositiveCounter" path="/jml_key_lezione/src/oggetti/PositiveCounter.java">
         <method displayName="PositiveCounter()" name="PositiveCounter" declaringType="oggetti.PositiveCounter" declaringFilePath="/jml_key_lezione/src/oggetti/PositiveCounter.java" parameterTypes="">
            <contract name="oggetti.PositiveCounter[oggetti.PositiveCounter::PositiveCounter()].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounter.java/oggetti_PositiveCounter[oggetti_PositiveCounter__PositiveCounter()]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounter.java/oggetti_PositiveCounter[oggetti_PositiveCounter__PositiveCounter()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="incr()" name="incr" declaringType="oggetti.PositiveCounter" declaringFilePath="/jml_key_lezione/src/oggetti/PositiveCounter.java" parameterTypes="">
            <contract name="oggetti.PositiveCounter[oggetti.PositiveCounter::incr()].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounter.java/oggetti_PositiveCounter[oggetti_PositiveCounter__incr()]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounter.java/oggetti_PositiveCounter[oggetti_PositiveCounter__incr()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="decr()" name="decr" declaringType="oggetti.PositiveCounter" declaringFilePath="/jml_key_lezione/src/oggetti/PositiveCounter.java" parameterTypes="">
            <contract name="oggetti.PositiveCounter[oggetti.PositiveCounter::decr()].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounter.java/oggetti_PositiveCounter[oggetti_PositiveCounter__decr()]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounter.java/oggetti_PositiveCounter[oggetti_PositiveCounter__decr()]_JML_operation_contract_0.proofmeta"/>
         </method>
      </type>
      <type name="PositiveCounterWithInvariant" path="/jml_key_lezione/src/oggetti/PositiveCounterWithInvariant.java">
         <method displayName="PositiveCounterWithInvariant()" name="PositiveCounterWithInvariant" declaringType="oggetti.PositiveCounterWithInvariant" declaringFilePath="/jml_key_lezione/src/oggetti/PositiveCounterWithInvariant.java" parameterTypes="">
         </method>
         <method displayName="incr()" name="incr" declaringType="oggetti.PositiveCounterWithInvariant" declaringFilePath="/jml_key_lezione/src/oggetti/PositiveCounterWithInvariant.java" parameterTypes="">
            <contract name="oggetti.PositiveCounterWithInvariant[oggetti.PositiveCounterWithInvariant::incr()].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounterWithInvariant.java/oggetti_PositiveCounterWithInvariant[oggetti_PositiveCounterWithInvariant__incr()]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounterWithInvariant.java/oggetti_PositiveCounterWithInvariant[oggetti_PositiveCounterWithInvariant__incr()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="decr()" name="decr" declaringType="oggetti.PositiveCounterWithInvariant" declaringFilePath="/jml_key_lezione/src/oggetti/PositiveCounterWithInvariant.java" parameterTypes="">
            <contract name="oggetti.PositiveCounterWithInvariant[oggetti.PositiveCounterWithInvariant::decr()].JML operation contract.0" modality="DIAMOND" proofFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounterWithInvariant.java/oggetti_PositiveCounterWithInvariant[oggetti_PositiveCounterWithInvariant__decr()]_JML_operation_contract_0.proof" metaFilePath="/jml_key_lezione/proofs/oggetti/PositiveCounterWithInvariant.java/oggetti_PositiveCounterWithInvariant[oggetti_PositiveCounterWithInvariant__decr()]_JML_operation_contract_0.proofmeta"/>
         </method>
         <method displayName="main(java.lang.String[])" name="main" declaringType="oggetti.PositiveCounterWithInvariant" declaringFilePath="/jml_key_lezione/src/oggetti/PositiveCounterWithInvariant.java" parameterTypes="[Ljava.lang.String">
         </method>
      </type>
   </package>
</project>
