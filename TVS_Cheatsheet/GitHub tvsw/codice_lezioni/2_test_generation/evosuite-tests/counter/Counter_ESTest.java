/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 16 16:16:36 CET 2021
 */

package counter;

import static org.junit.Assert.assertEquals;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(useVNET = true, separateClassLoader = true, useJEE = true) 
public class Counter_ESTest extends Counter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.m(0, 6);
      assertEquals(0, counter0.val());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.m((-1), 0);
      assertEquals(0, counter0.val());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.inc();
      int int0 = counter0.val();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.dec();
      int int0 = counter0.val();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.dec();
      counter0.inc();
      counter0.inc();
      int int0 = counter0.dec();
      assertEquals(0, counter0.val());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.dec();
      counter0.dec();
      counter0.inc();
      counter0.inc();
      counter0.dec();
      counter0.inc();
      counter0.dec();
      counter0.m((-1), 5);
      assertEquals((-1), counter0.val());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.dec();
      counter0.m((-1), 0);
      assertEquals((-1), counter0.val());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.dec();
      counter0.m(0, 0);
      assertEquals((-1), counter0.val());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Counter counter0 = new Counter();
      int int0 = counter0.val();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Counter counter0 = new Counter();
      counter0.inc();
      counter0.inc();
      int int0 = counter0.dec();
      assertEquals(1, int0);
  }
}
