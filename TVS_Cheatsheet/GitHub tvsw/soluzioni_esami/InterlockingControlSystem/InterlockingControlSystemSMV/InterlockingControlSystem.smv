
MODULE main
VAR
-- la posizione dei due treni
	treno1 : 1 .. 4;
	treno2 : 1 .. 4;
-- le quattro tracks
	track1 : track(1,2,treno1,treno2);
	track2 : track(2,3,treno1,treno2);
	track3 : track(3,4,treno1,treno2);
	track4 : track(4,1,treno1,treno2);
	
ASSIGN
	init (treno1) := 1;
	init (treno2) := 3;
	init (track1.semaforo) := ros;
	init (track2.semaforo) := gial;
	init (track3.semaforo) := ros;
	init (track4.semaforo) := gial;
-- i treni possono muoversi se il semaforo non è rosso	
	next (treno1) :=
		case
		-- il semaforo è rosso nella prossima track: deve srìtare fermo
			treno1 = 1 & track2.semaforo = ros : treno1;
			treno1 = 2 & track3.semaforo = ros : treno1;
			treno1 = 3 & track4.semaforo = ros : treno1;
			treno1 = 4 & track1.semaforo = ros : treno1;
			-- il semaforo dove è non è rosso, può muoversi
			treno1 = 1 : {1, 2};
			treno1 = 2 : {2, 3};
			treno1 = 3 : {3, 4};
			treno1 = 4 : {4, 1};
			TRUE : treno1;
		esac;
	next (treno2) :=
		case
			treno2 = 1 & track2.semaforo = ros : treno2;
			treno2 = 2 & track3.semaforo = ros : treno2;
			treno2 = 3 & track4.semaforo = ros : treno2;
			treno2 = 4 & track1.semaforo = ros : treno2;
			-- oppure può avanzare di 1 8si potrebbe usare il modulo)
			treno2 = 1 : {1,2};
			treno2 = 2 : {2, 3};
			treno2 = 3 : {3, 4};
			treno2 = 4 : {4, 1};
			TRUE : treno2;
		esac;
		
--se un treno si trova nella posizione i il semaforo i è rosso
CTLSPEC AG (track1.semaforo=ros -> (treno1=1 | treno2=1));
CTLSPEC AG (track2.semaforo=ros -> (treno1=2 | treno2=2));
CTLSPEC AG (track3.semaforo=ros -> (treno1=3 | treno2=3));
CTLSPEC AG (track4.semaforo=ros -> (treno1=4 | treno2=4));

--se il semaforo i è verde un treno si trova nella posizione i-1 l'altro nella posizione i-2
CTLSPEC AG (track1.semaforo=ver -> ((treno1=3 & treno2=4)|(treno1=4 & treno2=3)));
CTLSPEC AG (track2.semaforo=ver -> ((treno1=4 & treno2=1)|(treno1=1 & treno2=4)));
CTLSPEC AG (track3.semaforo=ver -> ((treno1=1 & treno2=2)|(treno1=2 & treno2=1)));
CTLSPEC AG (track4.semaforo=ver -> ((treno1=2 & treno2=3)|(treno1=3 & treno2=2)));

-- due treni non si troveranno mai nella stessa posizione
CTLSPEC AG !(treno1=treno2);

-- il treno 1 può raggiungere tutte le posizioni
CTLSPEC AG EF (treno1=1);
CTLSPEC AG EF (treno1=2);
CTLSPEC AG EF (treno1=3);
CTLSPEC AG EF (treno1=4);

--il treno 2 può raggiungere tutte le posizioni
CTLSPEC AG EF (treno2=1);
CTLSPEC AG EF (treno2=2);
CTLSPEC AG EF (treno2=3);
CTLSPEC AG EF (treno2=4);

-- esiste un path dove i treni stanno sempre fermi
CTLSPEC EG (treno1=1);
CTLSPEC EG (treno2=3);

-- un semaforo può sempre diventare verde
CTLSPEC AG EF (track1.semaforo=ver);


--formule CTL false
-- il treno1 non raggiungerà mai la posizione 4
SPEC AG(treno1!=4);


-- CTLSPEC EG (treno1=2);
-- CTLSPEC EF (treno1=treno2);

--CTLSPEC EG (treno2=4);

--CTLSPEC AF (treno1=treno2)

MODULE track(track_num,next_track,treno1,treno2)
VAR 
    semaforo : {ver, gial, ros};

ASSIGN
	next (semaforo) :=
		case
		-- se un treno occupa questa track allora è rosso
			next (treno1) = track_num | next (treno2) = track_num : ros;
		-- se un treno occupa la track successiva ma questa è libera, allora giallo
			next (treno1) = next_track & next (treno2) != track_num : gial;
			next (treno2) = next_track & next (treno1) != track_num : gial;
		-- altrimenti è verde
			TRUE : ver;
		esac;

