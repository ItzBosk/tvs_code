
meglio non usare gli enumerativi

si usano solo oggetti public, se qualcosa deve essere private si usa spec_public per renderlo public solo per JML
esempio costruttore:
private /*@ spec_public @*/ int peso;

int[] creditoGiocatori;
	
//@ public invariant numGiocatori >= 0;
/*@ spec_public @*/ int numGiocatori;

//@ public invariant numGiocata >= 0;
/*@ spec_public @*/ int numGiocata;

public Gioco(int n) {
	Gioca = true;
	numGiocatori = n;
	numGiocata = 0;
	creditoGiocatori = new int[n];


//@ requires n > 0;

per array
//@ requires a != null && a.length >= 1;

//@ ensures eta < 18 < ==> \result;

//@ ensures (\forall int i; i > 0 && i < numGiocatori; creditoGiocatori[i] >= 0);

//@ ensures (\exists int i; i >= 0 && i < a.length; \result == a[i]);	

loop invariant = condizione che deve essere vera in ogni iterazione del loop
//@ diverges true; 	// assicura che il loop finisca
public void foo() {
	int i = 0;
	//@ loop_invariant i >= 0 && i <= 10;
	while (i < 10) {
		i++;
	}
}

come andare a capo (JML su piÃ¹ righe)
// ES1
/*ensures (\exists int i; i >= 0 && i < creditoGiocatori.length; creditoGiocatori[i] == 0) 
  @ ==> Gioca == false; 
@*/

// ES2
/*@ requires x > 0; 
  @ ensures \result > 0; 
  also
  requires x < 0; 
  ensures \result <= 0; 
@*/

assert per verificare che una condizione sia verificata in un certo punto del codice
//@ assert (\forall int i; i >= 0 && i < a.length; a[i] > 0);

